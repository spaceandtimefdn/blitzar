name: Test-Check-Lint

on:
  workflow_call:
  pull_request:
    types:
      - opened
      - synchronize

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  format-code:
    name: Check code
    runs-on: self-hosted
    timeout-minutes: 600
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run check
        run: >
          nix develop --command ./tools/code_format/check_format.py check

  test-cpp:
    name: C++ code
    runs-on: self-hosted
    timeout-minutes: 600
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run cpp tests
        run: >
          nix develop --command bazel test //...

  test-cpp-compute-sanitizer:
    name: C++ code with compute sanitizer
    runs-on: self-hosted
    timeout-minutes: 600
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

        # TODO(rnburn): Two test cases fail
        #    - //cbindings:inner_product_proof.t
        #    - //sxt/multiexp/multiproduct_gpu:kernel.t
        # The first times out and the second gives errors in the CI
        # environment but not the nix environment with more up-to-date versions
        # of LLVM and the cuda toolkit. I'm disabling the tests for now but will
        # revist after the CI environment is updated.
      - name: Run cpp tests
        run: >
          nix develop --command \
            bazel test --jobs=1 --run_under $PWD/tools/cuda/compute_sanitizer_wrapper.sh //... -- \
               -//cbindings:inner_product_proof.t -//sxt/multiexp/multiproduct_gpu:kernel.t
          
  test-cpp-opt:
    name: C++ code with optimizations
    runs-on: self-hosted
    timeout-minutes: 600
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run cpp tests with optimization flags on
        run: >
          nix develop --command bazel test --jobs=1 -c opt //...

  test-cpp-asan:
    name: C++ code with address sanitizer
    runs-on: self-hosted
    timeout-minutes: 600
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Run cpp-asan tests
        run: >
          nix develop --command bazel test --config=asan //...

  test-rust:
    name: Rust Sys Crate
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run rust tests
        run: docker run --rm -e TEST_TMPDIR=/root/.cache_bazel -v $HOME/.cache_bazel_test_rust:/root/.cache_bazel -v "$PWD":/src:ro -w /src --gpus all --privileged spaceandtimelabs/blitzar:12.2.0-cuda-1.71.1-rust-1 /bin/bash -c "cp -av /src/ /src_tmp/; cd /src_tmp; source /root/.cargo/env; /root/.cargo/bin/cargo test --manifest-path rust/blitzar-sys/Cargo.toml; /root/.cargo/bin/cargo test --manifest-path rust/tests/Cargo.toml"
